esphome:
  name: oxilife
  friendly_name: Oxilife

rp2040:
  board: rpipicow
  framework:
    platform_version: https://github.com/maxgerhardt/platform-raspberrypi.git

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "your key"

ota:
  password: "b5cbb4207135e5635dfe27d1044acc0d"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: "Oxilife Fallback Hotspot"
    password: "7oKuvG8tiBtV"

# Configure I2C for the AHT10 sensor
i2c:
  sda: 8
  scl: 9
  scan: True

# Configure UART for RS485
uart:
  id: uart_bus
  tx_pin: GPIO0
  rx_pin: GPIO1
  baud_rate: 19200 

# Configure Modbus RTU
modbus:
  id: uart_modbus
  uart_id: uart_bus

# Define a Modbus controller
modbus_controller:
  - id: my_modbus_controller
    address: 1 
    modbus_id: uart_modbus

# All sensor definitions under one sensor block
sensor:
  - platform: aht10
    address: 0x38
    temperature:
      name: "PicoW1 Temperature"
      unit_of_measurement: "Â°C"
      accuracy_decimals: 1
    humidity:
      name: "PicoW1 Humidity"
      unit_of_measurement: " %"
      accuracy_decimals: 0
    update_interval: 60s

  - platform: modbus_controller
    modbus_controller_id: my_modbus_controller
    name: "Hidro Current"
    address: 0x0101
    register_type: "holding"
    value_type: "U_WORD"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    modbus_controller_id: my_modbus_controller
    name: "PH"
    address: 0x0102
    register_type: "holding"
    value_type: "U_WORD"
    unit_of_measurement: "pH"
    accuracy_decimals: 1
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: my_modbus_controller
    name: "RX"
    address: 0x0103
    register_type: "holding"
    value_type: "U_WORD"
    unit_of_measurement: "mV"
    accuracy_decimals: 0
    filters:
      - multiply: 1.0

  - platform: modbus_controller
    modbus_controller_id: my_modbus_controller
    name: "CL"
    address: 0x0104
    register_type: "holding"
    value_type: "U_WORD"
    unit_of_measurement: "ppm"
    accuracy_decimals: 0
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: my_modbus_controller
    name: "RX_STATUS"
    id: rx_status
    address: 0x0108
    register_type: "holding"
    value_type: "U_WORD"
    unit_of_measurement: ""
    accuracy_decimals: 0
    filters:
      - multiply: 1.0

# Template sensors to interpret individual bits
binary_sensor:
  - platform: template
    name: "RX Pump Relay"
    lambda: |-
      return (int(id(rx_status).state) & 0x1000) > 0;
    icon: mdi:water-pump

  - platform: template
    name: "Redox Module Active"
    lambda: |-
      return (int(id(rx_status).state) & 0x2000) > 0;
    icon: mdi:water

  - platform: template
    name: "Measuring Redox Active"
    lambda: |-
      return (int(id(rx_status).state) & 0x4000) > 0;
    icon: mdi:water

  - platform: template
    name: "Measuring Redox Detected"
    lambda: |-
      return (int(id(rx_status).state) & 0x8000) > 0;
    icon: mdi:check-network-outline
